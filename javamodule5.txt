Q1.What is Exception in Java?

An exception is an event, which occurs during the execution of a program, that disrupts the normal flow of the program's instructions. When an error occurs within a method, the method creates an object and hands it off to the runtime system.

Q2.What is Exception Handling?

The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors so that the normal flow of the application can be maintained. 
In this tutorial, we will learn about Java exceptions, it's types, and the difference between checked and unchecked exceptions.

Q3.What is the difference between Checked and Unchecked Exceptions and Error?

Checked Exception

1.Checked exceptions occur at compile time.
2.These types of exceptions can be handled at the time of compilation.
3.They are the sub-class of the exception class.
4.Here, the JVM needs the exception to catch and handle.
5.Examples of Checked exceptions:
    File Not Found Exception
    No Such Field Exception
    Interrupted Exception
    No Such Method Exception
    Class Not Found Exception

Unchecked Exception

1.Unchecked exceptions occur at runtime.
2.The compiler does not check these types of exceptions.
3.These types of exceptions cannot be a catch or handle at the time of compilation, because they get generated by the mistakes in the program.
4.They are runtime exceptions and hence are not a part of the Exception class.
5.Here, the JVM does not require the exception to catch and handle.
6.Examples of Unchecked Exceptions:
  No Such Element Exception
  Undeclared Throwable Exception
  Empty Stack Exception
  Arithmetic Exception
  Null Pointer Exception
  Array Index Out of Bounds Exception
  Security Exception


Q4.What are the difference between throw and throws in Java?

Java throw keyword is used throw an exception explicitly in the code, inside the function or the block of code. Java throws keyword is used in the method signature to declare an exception which might be thrown by the function while the execution of the code.

Q5.What is multithreading in Java? mention its advantages

1) It doesn't block the user because threads are independent and you can perform multiple operations at the same time.

2) You can perform many operations together, so it saves time.

3) Threads are independent, so it doesn't affect other threads if an exception occurs in a single thread.

Q6.Write a program to create and call a custom exception

class MyCustomException extends Exception  
{  
    
}  
  public class TestCustomException2  
{  
    public static void main(String args[])  
    {  
        try  
        {  
            throw new MyCustomException();  
        }  
        catch (MyCustomException ex)  
        {  
            System.out.println("Caught the exception");  
            System.out.println(ex.getMessage());  
        }  
  
        System.out.println("rest of the code...");    
    }  
}  

Q7.How can you handle exceptions in Java? 


Exception Handling in Java | Java Exceptions - javatpoint
The "try" keyword is used to specify a block where we should place an exception code. It means we can't use try block alone. The try block must be followed by either catch or finally. The "catch" block is used to handle the exception.



Q8.What is Thread in Java?

What is a thread in Java?
A thread is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently. Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority.

Q9. What are the two ways of implementing thread in Java?

Java's creators have graciously designed two ways of creating threads:
 implementing an interface and extending a class.
 Extending a class is the way Java inherits methods and variables from a parent class.

Q10.What do you mean by garbage collection?

Garbage collection in Java is the automated process of deleting code that's no longer needed or used. This automatically frees up memory space and ideally makes coding Java apps easier for developers.